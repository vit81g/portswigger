Vulnerabilities in multi-factor authentication
https://portswigger.net/web-security/learning-paths/authentication-vulnerabilities/vulnerabilities-in-multi-factor-authentication/authentication/multi-factor/vulnerabilities-in-multi-factor-authentication

# Уязвимости в многофакторной аутентификации

В этом разделе мы рассмотрим некоторые уязвимости, которые могут возникнуть в механизмах многофакторной аутентификации. Мы также провели несколько интерактивных лабораторных работ, чтобы продемонстрировать, как можно использовать эти уязвимости в многофакторной аутентификации.

Многие веб-сайты полагаются исключительно на однофакторную аутентификацию с использованием пароля для аутентификации пользователей. Однако некоторые требуют, чтобы пользователи подтверждали свою личность, используя несколько факторов аутентификации.


# Уязвимости в многофакторной аутентификации - Продолжение
Vulnerabilities in multi-factor authentication - Continued

Проверка биометрических факторов нецелесообразна для большинства веб-сайтов. Однако все чаще можно увидеть как обязательную, так и необязательную двухфакторную аутентификацию (2FA), основанную на том, что вы знаете и что у вас есть. Обычно для этого пользователям необходимо ввести как традиционный пароль, так и временный код проверки с внешнего физического устройства, находящегося в их распоряжении.

Хотя иногда злоумышленник может получить один фактор, основанный на знаниях, например пароль, возможность одновременно получить другой фактор из внешнего источника значительно менее вероятна. По этой причине двухфакторная аутентификация явно более безопасна, чем однофакторная аутентификация. Однако, как и любая мера безопасности, она настолько безопасна, насколько безопасна ее реализация. Плохо реализованную двухфакторную аутентификацию можно обойти или даже полностью обойти, как и однофакторную аутентификацию.

Также стоит отметить, что все преимущества многофакторной аутентификации достигаются только за счет проверки нескольких различных факторов. Проверка одного и того же фактора двумя разными способами не является настоящей двухфакторной аутентификацией. 2FA на основе электронной почты — один из таких примеров. Хотя пользователь должен предоставить пароль и код подтверждения, доступ к коду зависит только от того, что он знает учетные данные для входа в свою учетную запись электронной почты. Таким образом, фактор аутентификации знаний просто проверяется дважды.


# Токены двухфакторной аутентификации
Two-factor authentication tokens

Коды проверки обычно считываются пользователем с какого-либо физического устройства. Многие веб-сайты с высоким уровнем безопасности теперь предоставляют пользователям специальное устройство для этой цели, например токен RSA или клавиатурное устройство, которое вы можете использовать для доступа к своему онлайн-банкингу или рабочему ноутбуку. Эти специализированные устройства не только созданы специально для обеспечения безопасности, но и имеют то преимущество, что они напрямую генерируют код проверки. По той же причине веб-сайты также часто используют специальное мобильное приложение, такое как Google Authenticator.

С другой стороны, некоторые веб-сайты отправляют коды подтверждения на мобильный телефон пользователя в виде текстового сообщения. Хотя технически это все еще проверка фактора «что-то, что у вас есть», оно открыто для злоупотреблений. Во-первых, код передается по SMS, а не генерируется самим устройством. Это создает вероятность перехвата кода. Также существует риск подмены SIM-карты, когда злоумышленник обманным путем получает SIM-карту с номером телефона жертвы. Затем злоумышленник получит все SMS-сообщения, отправленные жертве, включая сообщение, содержащее код подтверждения.


# Обход двухфакторной аутентификации
Bypassing two-factor authentication

Иногда реализация двухфакторной аутентификации ошибочна до такой степени, что ее можно полностью обойти.

Если пользователю сначала предлагается ввести пароль, а затем на отдельной странице предлагается ввести код подтверждения, пользователь фактически находится в состоянии «logged in» до того, как ввел код подтверждения. В этом случае стоит проверить, можете ли вы сразу перейти на страницы «только для входа» после завершения первого шага аутентификации. Иногда вы обнаружите, что веб-сайт на самом деле не проверяет, выполнили ли вы второй шаг перед загрузкой страницы.


# Неверная логика двухфакторной проверки
Flawed two-factor verification logic

Иногда ошибочная логика двухфакторной аутентификации означает, что после того, как пользователь выполнил начальный шаг входа в систему, веб-сайт не может должным образом проверить, что тот же пользователь выполняет второй шаг.

Например, пользователь входит в систему со своими обычными учетными данными на первом этапе следующим образом:
POST /login-steps/first HTTP/1.1
Host: vulnerable-website.com
...
username=carlos&password=qwerty


Затем им назначается файл cookie, относящийся к их учетной записи, прежде чем они переходят ко второму этапу процесса входа в систему:
HTTP/1.1 200 OK
Set-Cookie: account=carlos

GET /login-steps/second HTTP/1.1
Cookie: account=carlos

При отправке кода подтверждения запрос использует этот файл cookie, чтобы определить, к какой учетной записи пользователь пытается получить доступ:
POST /login-steps/second HTTP/1.1
Host: vulnerable-website.com
Cookie: account=carlos
...
verification-code=123456

В этом случае злоумышленник может войти в систему, используя свои собственные учетные данные, но затем изменить значение файла account cookie (учетной записи) на любое произвольное имя пользователя при отправке кода подтверждения.
POST /login-steps/second HTTP/1.1
Host: vulnerable-website.com
Cookie: account=victim-user
...
verification-code=123456

Это чрезвычайно опасно, если злоумышленник затем сможет подобрать проверочный код, поскольку это позволит ему входить в произвольные учетные записи пользователей, полностью основываясь на их имени пользователя. Им даже не понадобится знать пароль пользователя.
