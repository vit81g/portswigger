Subverting application logic
Подрыв логики приложения

Представьте себе приложение, которое позволяет пользователям входить в систему, используя имя пользователя и пароль. Если пользователь отправляет имя пользователя wiener и пароль bluecheese, приложение проверяет учетные данные, выполняя следующий запрос SQL:
SELECT * FROM users WHERE username = 'wiener' AND password = 'bluecheese'

Если запрос возвращает сведения о пользователе, вход в систему успешен. В противном случае оно отклоняется.

В этом случае злоумышленник может войти в систему под любым пользователем без необходимости ввода пароля. Они могут сделать это, используя последовательность комментариев SQL, чтобы удалить проверку пароля из предложения WHERE запроса. Например, если указать имя пользователя administrator'-- и пустой пароль, получится следующий запрос:
SELECT * FROM users WHERE username = 'administrator'--' AND password = ''

Этот запрос возвращает username с именем administrator и успешно регистрирует злоумышленника в качестве этого пользователя.

Lab: SQL injection vulnerability allowing login bypass
Лабораторная работа: Уязвимость внедрения SQL, позволяющая обойти вход в систему.


Эта лабораторная работа содержит уязвимость SQL-инъекции в функции входа в систему.

Для решения лабораторной работы выполните атаку с помощью SQL-инъекции, войдя в приложение от имени administrator.

Решение

     Используйте Burp Suite для перехвата и изменения запроса на вход.
     Измените параметр имени username, присвоив ему значение: administrator'--

1. тут все просто. В поле username указать:
administrator'--
В поле Password любые символы
Нажать log in

Все. Это и есть обход авторизации с помощью SQL-injection
